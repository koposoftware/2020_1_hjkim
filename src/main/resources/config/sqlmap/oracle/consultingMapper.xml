<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="consulting.dao.consultingDAO">
   <resultMap type="historyVO" id="historyMap">
      <result column="chat_no" property="chatNo" />
      <result column="send_date" property="sendDate" />
   </resultMap>
   <resultMap type="chatListVO" id="chatListMap">
      <result column="rn" property="rn"/>
      <result column="counselor" property="counselor"/>
      <result column="chat_no" property="chatNo" />
      <result column="user_no" property="userNo" />
      <result column="start_date" property="startDate" />
      <result column="end_date" property="endDate" />
   </resultMap>
   <resultMap type="memberVO" id="memberMap">
      <result column="user_no" property="userNo" />
      <result column="phone_no" property="phoneNo" />
      <result column="reg_date" property="regDate" />
   </resultMap>
   
   <resultMap type="chatListUserNameVO" id="chatListUserNameMap">
      <association property="userVO">
         <result column="user_name" property="name" />
      </association>
      <association property="counselorVO">
         <result column="counselor_name" property="name" />
      </association>
      <association property="chatListVO" resultMap="chatListMap"/>
   </resultMap>
   <resultMap type="productFileVO" id="productFileMap">
      <result column="file_no" property="fileNo"/>
      <result column="product_code" property="productCode"/>
      <result column="org_file_name" property="orgFileName"/>
      <result column="stored_file_name" property="storedFileName"/>
      <result column="file_size" property="fileSize"/>
      <result column="reg_date" property="regDate"/>
      <result column="del_gb" property="delGb"/>
   </resultMap>
   
   <!-- 상담사가 로그인을 하게되면 f_chat_list에 등록 -->
   <insert id="insertCounselor" parameterType="int">
      insert into f_chat_list(chat_no, counselor)
       values (seq_f_chat_list_chat_no.nextval, #{userNo})
   </insert>
   
   <!-- userNo로 채팅방 검색 단, end_date가 null인 것들만 -->
   <select id="selectChatNo" parameterType="int" resultType="int">
      select chat_no
        from f_chat_list
       where (counselor = #{userNo} or user_no = #{userNo}) and end_date is null
   </select>
   
   <!-- 채팅 내용을 넣는다. -->
   <insert id="insertHistory" parameterType="historyVO">
      insert into f_chat_history(chat_no, sender, receiver, content)
       values (#{chatNo}, #{sender}, #{receiver}, #{content})
   </insert>
   
   <!-- f_chat_list에서 user_no가 null인 것들 중 랜덤으로 1개를 뽑아 user_no삽입 -->
   <update id="updateChatListUser" parameterType="int">
      update f_chat_list
         set user_no = #{userNo}
       where chat_no = (select chat_no 
                         from( 
                              select * from f_chat_list
                               where user_no is null
                               order by DBMS_RANDOM.RANDOM
                             ) 
                         <![CDATA[where rownum <2]]>
                        )   
   </update>
   <!-- 상담사가 다른 페이지에 있다와도 채팅 내용이 보일수 있도록 채팅 내용을 먼저 load함 -->
   <select id="selectHistoryList" resultMap="historyMap" parameterType="int">
      select chat_no, sender, receiver, content, send_date
        from f_chat_history
       where chat_no = (
                        select chat_no 
                          from f_chat_list
                         where counselor = #{userNo} and end_date is null and user_no is not null
                        )
   </select>
   <!-- end date를 업데이트한다. -->
   <update id="updateEndDate" parameterType="int">
      update f_chat_list
         set end_date = sysdate
       where user_no = #{userNo} and end_date is null
   </update>
   
   <!-- 상담사가 로그아웃을 하게되면  f_chat_list에 end_date is null and user_no is null인 것 지움  -->
   <delete id="deleteCounselor" parameterType="int">
      delete from f_chat_list
       where counselor = #{no} and end_date is null
   </delete>
   
   <!-- 채팅히스토리관련 -->
   <!-- 채팅내역select -->
   <select id="selectChatList" parameterType="int" resultMap="chatListMap">
      select chat_no, counselor, user_no, 
             to_char(start_date, 'YYYY-MM-DD HH24:MI:SS') as start_date,
             to_char(end_date, 'YYYY-MM-DD HH24:MI:SS') as end_date
        from f_chat_list
       where (counselor = #{no} or user_no = #{no}) and end_date is not null
       order by start_date desc
   </select>
   <!-- 테이블에 있는  userNo와 매핑시키기 위함 -->
   <select id="selectMemberName" parameterType="int" resultMap="memberMap">
      select user_no, name, type
        from f_member
       where user_no = #{no}
   </select>
   
   <!-- 페이징 -->
   <!-- 페이징 처리한 채팅내역 select -->
   <select id="selectChatListPaging" resultMap="chatListUserNameMap" parameterType="map">
      select rn, chat_no, counselor, c.name as counselor_name ,a.user_no as user_no, b.name as user_name
             ,to_char(start_date, 'YYYY-MM-DD HH24:MI:SS') as start_date
             ,to_char(end_date, 'YYYY-MM-DD HH24:MI:SS') as end_date
      from (
             select rownum as rn, chat_no, counselor, user_no, start_date, end_date
               from (
                      select * from f_chat_list
                       where (counselor = #{userNo} or user_no = #{userNo})and end_date is not null
                       order by start_date desc
                     )
            ) A  left outer join f_member B on a.user_no = b.user_no
                 left outer join f_member C on a.counselor = c.user_no
       where rn between #{pagination.startList}
                        and (#{pagination.endList})
       order by rn asc
   </select>
   
   <!-- 전체 상담 내역 개수 -->
   <select id="selectChatListCnt" resultType="int" parameterType="int">
      select count(*) as listCnt
        from f_chat_list
       where (counselor = #{no} or user_no = #{no}) and end_date is not null
   </select>
   
   <select id="selectFile" parameterType="int" resultMap="productFileMap">
      select file_no, product_code, org_file_name, stored_file_name, round(file_size/1024, 1) as file_size, reg_date, del_gb
        from f_product_file
       where file_no = #{no} and del_gb = 'n'
   </select>
   
   <select id="selectHistoryDetail" parameterType="int" resultMap="historyMap">
      select chat_no, sender, receiver, content, send_date
        from f_chat_history
       where chat_no = #{chatNo}
   </select>
</mapper>