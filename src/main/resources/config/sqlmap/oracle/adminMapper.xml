<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin.dao.AdminDAO">
   <resultMap type="lawAreaVO" id="lawAreaMap">
      <result column="law_bjdcode" property="lawBjdCode"/>
      <result column="law_division" property="lawDivision"/>
   </resultMap>
   <resultMap type="productFileVO" id="productFileMap">
      <result column="file_no" property="fileNo"/>
      <result column="product_code" property="productCode"/>
      <result column="org_file_name" property="orgFileName"/>
      <result column="stored_file_name" property="storedFileName"/>
      <result column="file_size" property="fileSize"/>
      <result column="reg_date" property="regDate"/>
      <result column="del_gb" property="delGb"/>
   </resultMap>
   <!-- 시도 select -->
   <select id="sido" resultType="bjdcodeVO">
      select bjdcode, bjdname  from f_bjdcode where bjdcode like '__00000000' or bjdcode = '3611000000'
   </select>
   <!-- 시군구 select -->
   <select id="sigungu" resultType="bjdcodeVO" parameterType="String">
      select bjdcode, (case when (bjdcode like '41%' and substr(bjdName,-1) = '구') 
                            then substr(bjdName,instr(bjdname, ' ', -1, 2)+1) 
                            else substr(bjdName,instr(bjdname, ' ', -1, 1)+1) 
                       end) as bjdName
        from f_bjdcode 
       where bjdcode like concat(#{sido},'___00000') and bjdcode != concat(#{sido},'00000000')
   </select>
   <!-- 읍면동 select -->
   <select id="eupmyeondong" resultType="bjdcodeVO" parameterType="String">
      select bjdcode, substr(bjdName,instr(bjdname, ' ', -1, 1)+1) as bjdName
        from f_bjdcode 
       where regexp_like(bjdcode, concat(#{sigungu},'[0-9]{3}00'))
             and bjdcode != concat(subStr(#{sigungu},0,2),'00000000')
             and bjdcode != concat(#{sigungu},'00000')
   </select>
   
   <!-- 내가 삽입하려고 하는 지역이 테이블에 있는지 확인 -->
   <select id="selectCodeInfo" parameterType="String" resultType="String">
      select law_bjdcode
        from f_law_area
       where law_bjdcode = #{code}
   </select>
   
   <!-- admin이 입력한 ltv정보 삽입 -->
   <insert id="insertLawArea" parameterType="lawAreaVO">
      insert into f_law_area(law_bjdcode, law_division)
       values (#{lawBjdCode}, #{lawDivision})
   </insert>
   
   <!-- admin이 입력한 ltv정보 갱신 -->
   <update id="updateLawArea" parameterType="lawAreaVO">
      update f_law_area
         set law_division = #{lawDivision}
       where law_bjdcode = #{lawBjdCode}
   </update>
   
   <!-- 상품 파일 select -->
   <select id="selectFile" parameterType="String" resultMap="productFileMap">
      select file_no, product_code, org_file_name, stored_file_name, round(file_size/1024, 1) as file_size, reg_date, del_gb
        from f_product_file
       where product_code = #{no} and del_gb = 'n'
   </select>
   <!-- 상품 파일 download -->
   <select id="selectFileInfo" parameterType="int" resultMap="productFileMap">
      select file_no, product_code, org_file_name, stored_file_name, round(file_size/1024, 1) as file_size, reg_date, del_gb
        from f_product_file
       where file_no = #{no} and del_gb = 'n'
   </select>
   <!-- 상품 정보 insert -->
   <insert id="insertProduct" parameterType="loanProductVO" useGeneratedKeys="true" keyProperty="productCode">
      <selectKey keyProperty="productCode" resultType="String" order="BEFORE">
         select concat('hana',lpad((seq_f_product_code.nextval),5,'0')) from dual
      </selectKey>
      insert into f_loan_product(   product_code, 
                                    product_name, 
                                    product_content, 
                                    product_need_doc  )
                         values (   #{productCode},
                                    #{productName},
                                    #{productContent},
                                    #{productNeedDoc} )
   </insert>
   <insert id="insertProductFile" parameterType="hashMap">
      insert into f_product_file  (
                              file_no,
                              product_code,
                              org_file_name,
                              stored_file_name,
                              file_size
                           )VALUES(
                              seq_f_product_file_no.NEXTVAL,
                              #{PRODUCT_CODE},
                              #{ORG_FILE_NAME},
                              #{STORED_FILE_NAME},
                              #{FILE_SIZE}
                           )
   </insert>
</mapper>